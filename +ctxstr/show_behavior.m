function show_behavior(bdata)
% Basic behavioral overview, focusing on animal velocity and position.
% Movement onsets and reward deliveries are also indicated.
% 
% 'bdata' is the behavioral struct generated by 'parse_ctxstr.m'
%
% FIXME: Don't use "motion onsets" from 'parse_ctxstr'.

% Defaults
font_size = 18;

if ~exist('bdata', 'var')
    path_to_behavior = 'ctxstr.mat';
    bdata = load(path_to_behavior);
    bdata = bdata.behavior;
    fprintf('Loaded behavioral data from "%s"\n', path_to_behavior);
end

% Note: Assumes directory name is the dataset name
dataset_name = dirname;
x_lims = bdata.position.cont([1 end],1);

velocity = bdata.velocity;
position = cat(1, bdata.position.by_trial{:}); % Wrapped position

% Plot all trials
movement_onset_times = bdata.movement_onset_times;
us_times = bdata.us_times;
runtimes = us_times - movement_onset_times;
avg_runtime = mean(runtimes);
num_lick_trials = sum(bdata.lick_responses);
num_total_trials = length(bdata.lick_responses);

% Show velocity and position over the session
%------------------------------------------------------------
ax1 = subplot(311);

yyaxis left;
v_lims = tight_plot(velocity(:,1), velocity(:,2));
ylabel('Velocity (cm/s)');
hold on;
plot(x_lims, [0 0], 'k--');
y_pos = v_lims(1) + 0.95*diff(v_lims);
plot(bdata.lick_times,...
     y_pos*ones(size(bdata.lick_times)), 'b.');
hold off;

yyaxis right;
p_lims = tight_plot(position(:,1), position(:,2));
ylabel('Position (encoder count)');
hold on;
plot_vertical_lines(movement_onset_times, p_lims, 'r:');
plot_vertical_lines(us_times, p_lims, 'b:');
hold off;
xlim(x_lims);
zoom xon;
xlabel('Time (s)');
title(sprintf('%s (%d consumed out of %d total trials)',...
        dataset_name, num_lick_trials, num_total_trials));
set(ax1, 'TickLength', [0 0]);
set(ax1, 'FontSize', font_size);


% Align to movement onset
%------------------------------------------------------------
t = -2:0.1:(avg_runtime+2);

% Omission of the last US is a hack. This is necessary because "position"
% terminates with the very last US, which shortens the plots.
V_movement_onset = get_aligned_raster(velocity, movement_onset_times(1:end-1), t);
P_movement_onset = get_aligned_raster(position, movement_onset_times(1:end-1), t);

% Velocity
subplot(3,4,5);
imagesc(t, 1:size(V_movement_onset,1), V_movement_onset);
ylabel(sprintf('All trials (%d)', num_total_trials));
title('Velocity');
set(gca, 'FontSize', font_size);

subplot(3,4,9);
plotShadedErrorBar(t, V_movement_onset, [0 0.447 0.741]);
hold on;
plot(t([1 end]), [0 0], 'k--');
plot_vertical_lines(0, v_lims, 'r');
plot_vertical_lines(runtimes, v_lims, 'b:');
hold off;
ylabel('Velocity (cm/s)');
xlim(t([1 end]));
ylim(v_lims);
% grid on;
xlabel('Time relative to 10% distance threshold (s)');
set(gca, 'FontSize', font_size);

% Position
subplot(3,4,6);
imagesc(t, 1:size(P_movement_onset,1), P_movement_onset);
title('Position');
set(gca, 'FontSize', font_size);

subplot(3,4,10);
plotShadedErrorBar(t, P_movement_onset, [0.85 0.325 0.098]);
hold on;
plot(t([1 end]), [0 0], 'k--');
plot_vertical_lines(0, p_lims, 'r');
plot_vertical_lines(runtimes, p_lims, 'b:');
hold off;
ylabel('Position (encoder count)');
xlim(t([1 end]));
ylim(p_lims);
% grid on;
% xlabel('Time relative to 10% distance threshold (s)');
set(gca, 'FontSize', font_size);

% Align to US
%------------------------------------------------------------
t = -(avg_runtime+2):0.1:2;

V_us = get_aligned_raster(velocity, us_times(1:end-1), t);
P_us = get_aligned_raster(position, us_times(1:end-1), t);

% Velocity
subplot(3,4,7);
imagesc(t, 1:size(V_us,1), V_us);
title('Velocity');
set(gca, 'FontSize', font_size);

subplot(3,4,11);
plotShadedErrorBar(t, V_us, [0 0.447 0.741]); % New Matlab "blue" color
hold on;
plot(t([1 end]), [0 0], 'k--');
plot_vertical_lines(0, v_lims, 'b');
plot_vertical_lines(-runtimes, v_lims, 'r:');
hold off;
ylabel('Velocity (cm/s)');
xlim(t([1 end]));
ylim(v_lims);
% grid on;
xlabel('Time relative to US (s)');
set(gca, 'FontSize', font_size);

% Position
subplot(3,4,8);
imagesc(t, 1:size(P_us,1), P_us);
title('Position');
set(gca, 'FontSize', font_size);

subplot(3,4,12);
plotShadedErrorBar(t, P_us, [0.85 0.325 0.098]); % New Matlab "red" color
hold on;
plot(t([1 end]), [0 0], 'k--');
plot_vertical_lines(0, p_lims, 'b');
plot_vertical_lines(-runtimes, p_lims, 'r:');
hold off;
ylabel('Position (encoder count)');
xlim(t([1 end]));
ylim(p_lims);
% grid on;
% xlabel('Time relative to US (s)');
set(gca, 'FontSize', font_size);

end

function R = get_aligned_raster(data, alignment_times, sample_window)
    num_trials = length(alignment_times);
    num_samples = length(sample_window);
    R = zeros(num_trials, num_samples);
    for k = 1:num_trials
        R(k,:) = interp1(data(:,1), data(:,2), alignment_times(k) + sample_window);
    end
end

function plotShadedErrorBar(x, Y, color)
    N = size(Y,1);
    shadedErrorBar(x, mean(Y), std(Y)/sqrt(N), 'lineprops', {'Color', color});
end
