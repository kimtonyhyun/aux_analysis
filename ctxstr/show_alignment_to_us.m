function show_alignment_to_us(bdata)
% Parse behavioral data with respect to the time of US.
%
% Here, 'bdata' is the behavior struct that is generated by the
% function `parse_ctxstr.m`

num_rewards = length(bdata.us_times);
lick_times = bdata.lick_times;

dt = 0.25;
t0 = -4:dt:2;
NT = length(t0);

V = zeros(num_rewards, NT); % Velocity matrix
L = cell(num_rewards, 1); % Lick cell
for k = 1:num_rewards
    us_time = bdata.us_times(k);
    t = t0 + us_time;
    
    % Resample velocity trace
    V(k,:) = interp1(bdata.velocity(:,1), bdata.velocity(:,2), t);
    
    % Find licks that occur within the time window
    ind1 = find(lick_times > t(1), 1, 'first');
    ind2 = find(lick_times < t(end), 1, 'last');
    L{k} = lick_times(ind1:ind2) - us_time; % Relative times!
end

% Display results
subplot(3,2,[1 3]);
imagesc(t0, 1:num_rewards, V);
ylabel(sprintf('Reward index (%d total)', num_rewards));
title('Velocity');

v_avg = mean(V);
v_min = min(v_avg);
v_max = max(v_avg);
subplot(3,2,5);
shadedErrorBar(t0, v_avg, std(V)/sqrt(num_rewards));
grid on;
xlabel('Time relative to reward (s)');
ylabel('Velocity (mean\pms.e.m.)');
ylim(0.05*(v_max-v_min)*[-1 1] + [v_min v_max]);

subplot(3,2,[2 4]);
hold on;
for k = 1:num_rewards
    licks = L{k};
    num_licks_in_trial = length(licks);
    if num_licks_in_trial > 0
        plot(licks, k*ones(1,num_licks_in_trial), 'k.');
    end
end
hold off;
ylim([0.5 num_rewards+0.5]);
set(gca,'YDir','Reverse');
title('Licks');

all_lick_times = cell2mat(L);
subplot(3,2,6);
histogram(all_lick_times, t0);
xlim([t0(1) t0(end)]);
xlabel('Time relative to reward (s)');
ylabel('Lick counts');
grid on;

end % align_to_us